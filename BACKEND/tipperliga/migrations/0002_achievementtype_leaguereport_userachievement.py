# Generated by Django 5.1.7 on 2025-03-19 14:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tipperliga', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('points_reward', models.IntegerField(default=0)),
                ('badge_icon', models.ImageField(blank=True, null=True, upload_to='achievement_badges/')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(max_length=50)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tipperliga.league')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_date', models.DateTimeField(auto_now_add=True)),
                ('is_claimed', models.BooleanField(default=False)),
                ('achievement_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tipperliga.achievementtype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'achievement_type')},
            },
        ),
    ]
